{"version":3,"sources":["Components/ExpenseDate/ExpenseDate.components.jsx","Components/ExpenseFilter/ExpenseFilter.components.jsx","Components/ExpenseItem/ExpenseItem.components.jsx","Components/ExpenseList/ExpenseList.components.jsx","Components/Charts/ChartBar.js","Components/Charts/Chart.js","Components/ExpenseItem/ExpenseChart.jsx","Components/Expense/Expense.components.jsx","Components/NewExpense/ExpenseForm.jsx","Components/NewExpense/NewExpense.components.jsx","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","ExpensesFilter","value","selected","onChange","event","onYearChange","target","ExpenseItem","title","amount","ExpenseList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expense","useState","filteredYear","setFileteredYear","filteredExpense","filter","item","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","stopEditing","NewExpense","initialClick","setinitialClick","enteredExpensedData","random","onAddExpense","console","log","DUMMY_EXPENSES","App","setExpense","prevExpenses","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35fed0a4.chunk.js","sourcesContent":["import \"./ExpenseDate.styles.css\"\r\n\r\n\r\nfunction ExpenseDate(props) {\r\n    const month=props.date.toLocaleString(\"en-US\",{month:\"long\"})\r\n    const day=props.date.toLocaleString(\"en-US\",{day:\"2-digit\"})\r\n    const year=props.date.getFullYear();\r\n    return (<div>\r\n        <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseDate;","import React from 'react';\r\n\r\nimport \"./ExpenseFilter.styles.css\"\r\n\r\nconst ExpensesFilter = (props) => {\r\n    \r\n    const onFilterDate = (event) => {\r\n        props.onYearChange(event.target.value);\r\n       \r\n    }\r\n    return (\r\n        <div className='expenses-filter'>\r\n            <div className='expenses-filter__control'>\r\n                <label>Filter by year</label>\r\n                <select value={props.selected} onChange={onFilterDate}>\r\n                    <option value='2022'>2022</option>\r\n                    <option value='2021'>2021</option>\r\n                    <option value='2020'>2020</option>\r\n                    <option value='2019'>2019</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from 'react'\r\nimport '../ExpenseItem/ExpenseItem.styles.css'\r\nimport ExpenseDate from '../ExpenseDate/ExpenseDate.components';\r\n\r\nfunction ExpenseItem(props) {\r\n\r\n    return (\r\n        <li>\r\n            <div className=\"expense-item\">\r\n\r\n                <ExpenseDate date={props.date} />\r\n                <div className=\"expense-item__description\">\r\n                    <h2>{props.title}</h2>\r\n                </div>\r\n                <div className=\"expense-item__price\">\r\n                    <p>{props.amount}</p>\r\n\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react'\r\nimport ExpenseItem from '../ExpenseItem/ExpenseItem.components';\r\nimport \"./ExpenseList.styles.css\"\r\n\r\nconst ExpenseList = props => {\r\n\r\n    if (props.items.length === 0) {\r\n        return <h2 className=\"expenses-list__fallback\">Found No Expensed</h2>\r\n    }\r\n\r\n\r\n    return (\r\n        <ul className=\"expenses-list\">\r\n            {props.items.map((expense) => (\r\n                <ExpenseItem\r\n                    key={expense.id}\r\n                    title={expense.title}\r\n                    amount={expense.amount}\r\n                    date={expense.date}\r\n                />\r\n            ))}\r\n        </ul>\r\n    )\r\n\r\n}\r\n\r\nexport default ExpenseList;","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className='chart-bar'>\r\n      <div className='chart-bar__inner'>\r\n        <div\r\n          className='chart-bar__fill'\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\n\r\nimport Chart from '../Charts/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;","import \"../ExpenseDate/ExpenseDate.components\";\r\nimport \"../Expense/Expense.styles.css\";\r\nimport ExpensesFilter from \"../ExpenseFilter/ExpenseFilter.components\";\r\nimport ExpenseList from \"../ExpenseList/ExpenseList.components\";\r\nimport ExpensesChart from \"../ExpenseItem/ExpenseChart\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Expense(props) {\r\n  const [filteredYear, setFileteredYear] = useState(\"2020\");\r\n  const expenseFilterYear = (selectedYear) => {\r\n    setFileteredYear(selectedYear);\r\n  };\r\n  const filteredExpense = props.items.filter((item) => {\r\n    return item.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <div className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onYearChange={expenseFilterYear}\r\n        />\r\n        <ExpensesChart expenses={filteredExpense}/>\r\n        <ExpenseList items={filteredExpense}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expense;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const textChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={textChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            value={enteredAmount}\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={enteredDate}\r\n            min=\"2019-01-01\"\r\n            step=\"2022-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.stopEditing}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport \"./NewExpense.styles.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [initialClick, setinitialClick] = useState(true);\r\n  const onSaveHandler = (enteredExpensedData) => {\r\n    const expenseData = {\r\n      ...enteredExpensedData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setinitialClick(true)\r\n    console.log(expenseData);\r\n  };\r\n\r\n\r\n  const startEditing = () => {\r\n      setinitialClick(false);\r\n  }\r\n  const stopEditing =()=>{\r\n      setinitialClick(true);\r\n    }\r\n  \r\n \r\n  return (\r\n    <div className=\"new-expense\">\r\n      {initialClick && <button onClick={startEditing}>Add New Expense</button>}\r\n      {!initialClick && <ExpenseForm onSaveExpenseData={onSaveHandler} stopEditing={stopEditing}/>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import \"./App.css\";\nimport React, { useState } from 'react'\n\nimport Expense from \"./Components/Expense/Expense.components\";\nimport NewExpense from \"./Components/NewExpense/NewExpense.components\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n\n  const [expenses,setExpense]=useState(DUMMY_EXPENSES)\n  const addExpenseDataHandler = (expense)=>{\n    setExpense((prevExpenses =>{\n      return [expense,...prevExpenses]\n    }))\n  }\n  \n  return (\n    <div className=\"App\">\n      <NewExpense onAddExpense={addExpenseDataHandler}/>\n      <Expense items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}